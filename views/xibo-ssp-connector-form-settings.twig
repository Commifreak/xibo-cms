{#
/**
 * Copyright (C) 2022 Xibo Signage Ltd
 *
 * Xibo - Digital Signage - http://www.xibo.org.uk
 *
 * This file is part of Xibo.
 *
 * Xibo is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * Xibo is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.
 */
#}

{% extends "connector-form-edit.twig" %}
{% import "forms.twig" as forms %}
{% import "inline.twig" as inline %}

{% block connectorFormFields %}
    {% set partners = interface.getAvailablePartners() %}
    <h3>Xibo SSP Connector<small> - work with world leading supply side platforms</small></h3>
    <p>
        Onboard with one of the below SSP's, enter your API key and configure which displays you want to activate. <br>
        In most cases you will need to list your displays with the SSP and copy your SSP ID into the CMS.
    </p>
    <p>
        Please note that your players will require HTTP access to <code>https://exchange.xibo-adspace.com</code>
        to receive ads from any SSP.
    </p>

    {% if partners is not iterable %}
        <p class="alert alert-danger">{{ partners }}</p>
    {% endif %}

    {% if not interface.isProviderSetting("apiKey") %}
        <h4>Settings</h4>
        <p>Your API key allows for secure communication between the CMS and the Xibo SSP connector service. It is used
            to orchestrate the delivery of ads to your players.</p>

        {% set title %}{% trans "API Key" %}{% endset %}
        {% set helpText %}{% trans "Enter your API Key from Xibo." %}{% endset %}
        {{ forms.input("apiKey", title, interface.getSetting("apiKey"), helpText) }}
    {% endif %}

    <h4>Credentials</h4>
    {% if partners is iterable and partners|length > 0 %}
        <p>Choose SSP</p>
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Type</th>
                <th>Status</th>
                <th>User</th>
                <th></th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            {% for service in interface.getAvailableServices() %}
                {% set credential = interface.getCredentialForType(service.type) %}
                <tr>
                    <input type="hidden" name="{{ service.type }}_id" value="{{ credential.id }}">
                    <td>{{ service.name }}</td>
                    {% if credential %}
                        <td>{% if interface.isCredentialInErrorState(service.type) %}Error{% else %}Connected{% endif %}</td>
                        <td>{{ credential.userName }}</td>
                        <td>
                            {% set title %}{% trans "Change Password" %}{% endset %}
                            {% set helpText %}{{ "Please enter the password you use to connect to %service%"|trans({'%service%': service.name}) }}{% endset %}
                            {{ inline.password((service.type ~ "_password"), title, null, helpText) }}

                            {% set title %}{% trans "Change second factor secret" %}{% endset %}
                            {% set helpText %}{% trans "We support Google Authenticator or similar two factor codes. You get this secret by scanning the QR code." %}{% endset %}
                            {{ inline.input((service.type ~ "_twoFactorSecret"), title, null, helpText) }}
                        </td>
                        <td>{{ inline.checkbox((service.type ~ "_remove"), "Check to remove"|trans)}}</td>
                    {% else %}
                        <td colspan="4">
                            {% set title %}{% trans "Username" %}{% endset %}
                            {% set helpText %}{% trans "Please enter the username you use to connect to your dashboard service." %}{% endset %}
                            {{ inline.input((service.type ~ "_userName"), title, null, helpText) }}

                            {% set title %}{% trans "Password" %}{% endset %}
                            {% set helpText %}{{ "Please enter the password you use to connect to %service%"|trans({'%service%': service.name}) }}{% endset %}
                            {{ inline.password((service.type ~ "_password"), title, null, helpText) }}

                            {% set title %}{% trans "Second factor secret" %}{% endset %}
                            {% set helpText %}{% trans "We support Google Authenticator or similar two factor codes. You get this secret by scanning the QR code." %}{% endset %}
                            {{ inline.input((service.type ~ "_twoFactorSecret"), title, null, helpText) }}

                            {% if service.isUrl %}
                                {% set title %}{% trans "URL" %}{% endset %}
                                {% set helpText %}{{ "The URL where the %service% is hosted"|trans({'%service%':service.name}) }}{% endset %}
                                {{ inline.input((service.type ~ "_url"), title, null, helpText) }}
                            {% endif %}
                        </td>
                    {% endif %}
                </tr>
            {% endfor %}
            </tbody>
        </table>
    {% else %}
        <p>To see a list of available partners please enter your API key, save this form and then come back here.</p>
    {% endif %}

    <h4>Enable/Disable</h4>
    <p>Disabling this connector will stop new displays being registered with the SSP, but will not stop existing
    displays making ad requests. If you want to stop all requests, disable the SSP in the list above.</p>

{% endblock %}